{"version":3,"sources":["components/infiniteScrollListItem.jsx","app.jsx","index.js","service/user.js"],"names":["InfiniteScrollListItem","user","className","id","email","body","App","useState","userList","setUserList","pageNumber","setPageNumber","loading","setLoading","lastUserRef","useRef","useEffect","getInfo","then","data","member","loadUser","useCallback","prevPageNumber","IntersectionObserver","entries","isIntersecting","threshold","observe","current","map","ref","httpClient","this","pageCount","limitCount","a","get","axios","create","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAqBeA,EAnBgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChC,OACE,+BACE,sBAAKC,UAAU,cAAf,UACE,6CACA,+BAAOD,EAAKE,QAEd,sBAAKD,UAAU,iBAAf,UACE,wCACA,+BAAOD,EAAKG,WAEd,sBAAKF,UAAU,mBAAf,UACE,yCACA,+BAAOD,EAAKI,cC4BLC,MAvCf,YAAwB,IAATL,EAAQ,EAARA,KAAQ,EACWM,mBAAS,IADpB,mBACdC,EADc,KACJC,EADI,OAEeF,mBAAS,GAFxB,mBAEdG,EAFc,KAEFC,EAFE,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,KAIfC,EAAcC,mBACpBC,qBAAU,WACRf,EAAKgB,QAAQP,EAPH,IAOsBQ,MAAK,SAACC,GACpCV,GAAY,SAACW,GAAD,4BAAgBA,GAAhB,YAA2BD,OACvCN,GAAW,QAEZ,CAACH,EAAYT,IAChB,IAAMoB,EAAWC,uBAAY,WAC3BX,GAAc,SAACY,GAAD,OAAoBA,EAAiB,OAClD,IAYH,OAXAP,qBAAU,WACJJ,GACe,IAAIY,sBACnB,SAACC,GACCA,EAAQ,GAAGC,gBAAkBL,MAE/B,CAAEM,UAAW,IAENC,QAAQd,EAAYe,WAE9B,CAACjB,IAEF,gCACGJ,EAASsB,KAAI,SAAC7B,GACb,OACE,6BACE,cAAC,EAAD,CAAwBA,KAAMA,KADvBA,EAAKE,OAKlB,qBAAK4B,IAAKjB,Q,yDC3BVb,EAAO,I,WCVX,WAAY+B,GAAa,oBACvBC,KAAKD,WAAaA,E,kFAEpB,WAAcE,EAAWC,GAAzB,iBAAAC,EAAA,sEACyBH,KAAKD,WAAWK,IAAhB,iBACXH,EADW,mBACSC,IAFlC,uBACUhB,EADV,EACUA,KADV,kBAISA,GAJT,gD,gEDOW,CAHMmB,IAAMC,OAAO,CAC9BC,QAAS,mDAGXC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK1C,KAAMA,MAEb2C,SAASC,eAAe,W","file":"static/js/main.64184fc1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./infiniteScrollListItem.css\";\r\nconst InfiniteScrollListItem = ({ user }) => {\r\n  return (\r\n    <li>\r\n      <div className=\"idContainer\">\r\n        <h1>Comment Id </h1>\r\n        <span>{user.id}</span>\r\n      </div>\r\n      <div className=\"emailContainer\">\r\n        <h1>Email </h1>\r\n        <span>{user.email}</span>\r\n      </div>\r\n      <div className=\"commentContainer\">\r\n        <h1>Comment</h1>\r\n        <span>{user.body}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default InfiniteScrollListItem;\r\n","import \"./app.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport InfiniteScrollListItem from \"./components/infiniteScrollListItem\";\nconst LIMIT = 10;\nfunction App({ user }) {\n  const [userList, setUserList] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const lastUserRef = useRef();\n  useEffect(() => {\n    user.getInfo(pageNumber, LIMIT).then((data) => {\n      setUserList((member) => [...member, ...data]);\n      setLoading(true);\n    });\n  }, [pageNumber, user]);\n  const loadUser = useCallback(() => {\n    setPageNumber((prevPageNumber) => prevPageNumber + 1);\n  }, []);\n  useEffect(() => {\n    if (loading) {\n      const observer = new IntersectionObserver(\n        (entries) => {\n          entries[0].isIntersecting && loadUser();\n        },\n        { threshold: 1 }\n      );\n      observer.observe(lastUserRef.current);\n    }\n  }, [loading]);\n  return (\n    <div>\n      {userList.map((user) => {\n        return (\n          <ul key={user.id}>\n            <InfiniteScrollListItem user={user} />\n          </ul>\n        );\n      })}\n      <div ref={lastUserRef}></div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.css\";\nimport App from \"./app\";\nimport axios from \"axios\";\nimport User from \"./service/user.js\";\n\n// axios 인스턴스를 만들 때 구성 기본 값 설정\nconst httpClient = axios.create({\n  baseURL: \"https://jsonplaceholder.typicode.com/comments\",\n});\nconst user = new User(httpClient);\nReactDOM.render(\n  <React.StrictMode>\n    <App user={user} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","class User {\r\n  constructor(httpClient) {\r\n    this.httpClient = httpClient;\r\n  }\r\n  async getInfo(pageCount, limitCount) {\r\n    const { data } = await this.httpClient.get(\r\n      `?_page=${pageCount}&_limit=${limitCount}`\r\n    );\r\n    return data;\r\n  }\r\n}\r\n\r\nexport default User;\r\n"],"sourceRoot":""}